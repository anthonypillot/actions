name: ðŸ“„ Extract version
description: Extract version name from git reference, sanitize and slugify it. If the branch name is the default branch name, replace it with 'latest'. If the head reference is not available, use the git reference as branch name, for instance, the tag.

outputs:
  result:
    description: Version name extracted, sanitized and slugified
    value: ${{ steps.extract-version.outputs.result }}

runs:
  using: "composite"
  steps:
    - shell: bash
      id: extract-version
      run: |
        echo "This action extracts version name from git reference, sanitizes and slugifies it"
        echo "It also replaces the default version name with 'latest' if the current branch name is the default branch name"

        echo

        default_branch=${{ github.event.repository.default_branch }}
        head_ref=${{ github.head_ref }}
        git_ref=$(echo ${{ github.ref }} | cut -d'/' -f 3)

        echo "Default branch: '$default_branch'"
        if [ -n "$head_ref" ]; then
          echo "Head reference: '$head_ref'"
        else
          echo "Head reference: No head reference"
        fi
        echo "Git reference: '$git_ref'"

        echo

        if [ -n "$head_ref" ]; then
          echo "Head reference found, using it as version name ('$head_ref')"
          version_name=$head_ref
        else
          echo "No head reference found, so using git reference as version name ('$git_ref')"
          echo "Removing 'v' prefix from git reference if present: '$git_ref'"
          if [[ $git_ref == v* ]]; then
            git_ref=${git_ref:1}
          fi
          version_name=$git_ref
        fi

        echo

        echo "Sanitizing version name by replacing all '/' with '-'"
        version_name_sanitized=${version_name//\//-}

        echo

        if [ "$version_name_sanitized" = "$default_branch" ]; then
            echo "Version name '$version_name_sanitized' is the default repository branch name '$default_branch', so using 'latest' as version name"
            version_name_sanitized="latest"
            echo
        fi

        echo "Version name sanitized and used as output: '$version_name_sanitized'"
        echo result=$version_name_sanitized >> $GITHUB_OUTPUT
